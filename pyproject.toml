[build-system]
requires = ["setuptools>=68.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "code-assistant-manager"
dynamic = ["version"]
description = "CLI utilities for working with AI coding assistants"
readme = "README.md"
requires-python = ">=3.9"

# Runtime dependencies (PEP 621) â€” keep in sync with setup.py / requirements.txt
dependencies = [
  "requests>=2.31.0",
  "PyYAML>=6.0.1",
  "python-dotenv>=1.0.1",
  "typer>=0.12.0",
  "click>=8.1.7",
  "rich>=13.7.0",
  "pydantic>=2.6.0",
  "typing-extensions>=4.10.0",
  "httpx>=0.27.0",
]

[project.urls]
"Homepage" = "https://github.com/yourorg/code-assistant-manager"

[project.optional-dependencies]
dev = [
  # Testing
  "pytest>=8.0.0",
  "pytest-cov>=4.1.0",
  "pytest-asyncio>=0.23.0",
  # Code formatting
  "black>=24.3.0",
  "isort>=5.13.0",
  # Linting
  "flake8>=7.0.0",
  "flake8-bugbear>=24.0.0",
  "flake8-comprehensions>=3.14.0",
  "flake8-simplify>=0.21.0",
  # Type checking
  "mypy>=1.11.0",
  "types-PyYAML>=6.0.0",
  "types-requests>=2.31.0",
  # Security
  "bandit[toml]>=1.7.8",
  # Documentation
  "interrogate>=1.7.0",
  # Pre-commit
  "pre-commit>=3.7.0",
]

[tool.setuptools.packages.find]
where = ["."]
exclude = ["tests*", "build*"]

[tool.setuptools.dynamic]
version = {attr = "code_assistant_manager.__version__"}

[tool.setuptools.package-data]
"code_assistant_manager" = [
  "mcp/registry/**/*.json",
  "mcp/registry/*.json",
  "settings.json.example",
  "tools.yaml",
]

[project.scripts]
code-assistant-manager = "code_assistant_manager.cli:main"
cam = "code_assistant_manager.cli:main"

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_glob = ["*.patch"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true
exclude = ["code_assistant_manager/cli.py"]

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true

[tool.bandit]
exclude_dirs = ["tests", "build", "dist", ".eggs", "*.egg-info"]
skips = ["B101", "B601"]  # assert_used, paramiko_calls

[tool.bandit.assert_used]
skips = ["*_test.py", "test_*.py"]

[tool.interrogate]
ignore-init-method = true
ignore-init-module = false
ignore-magic = false
ignore-semiprivate = false
ignore-private = false
ignore-property-decorators = false
ignore-module = true
ignore-nested-functions = false
ignore-nested-classes = true
ignore-setters = false
fail-under = 50
exclude = ["setup.py", "docs", "build", "tests"]
verbose = 0
quiet = false
whitelist-regex = []
color = true
omit-covered-files = false
